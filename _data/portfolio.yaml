- title: Production Code
  items:
  - title: pitstop
    technologies: Clojure, MongoDB
    content: A message-deferring microservice. Send it a message and a time, and it will re-emit the message at the later time. Meant to genericize the deferring in things like transactional email events. It uses MongoDB for persistence.
    links:
    - class: code
      href: https://github.com/Rafflecopter/pitstop
    - class: blog
      href: http://joneisen.me/architecture/2015/07/18/pitstop-deferred-message-queue.html

  - title: nanoajax
    technologies: Browser Javascript
    content: A very small cross-browser ajax library. Weighs in at 0.5k minified and gzipped. It is my most popular library.
    links:
    - class: code
      href: https://github.com/yanatan16/nanoajax

  - title: relyq
    technologies: Clojure, node.js, Redis, Queues
    content: A reliable queue protocol backed by redis, with implementations in Clojure and node.js
    links:
    - class: code
      href: https://github.com/Rafflecopter/clj-relyq
      text: Clojure Code
    - class: code
      href: https://github.com/Rafflecopter/node-relyq
      text: node.js Code

  - title: Rafflecopter Giveaway Widget
    technologies: Javascript, Browser weirdness
    content: The javascript behind the 3rd-party iframe-insertion widget that powers the Rafflecopter platform.
    links:
      - class: live
        href: https://www.rafflecopter.com/tour
        text: See it in action

- title: Side Projects
  items:
  - title: fyra
    technologies: Clojure, Relational Model
    content: An experimental infrastructure and DSL for Functional Relational Programming (as defined in <i><a href="http://shaffner.us/cs/papers/tarpit.pdf">Out of the Tar Pit</a></i> by Ben Mosely and Peter Marks)
    links:
    - class: code
      href: https://github.com/yanatan16/fyra
    - class: blog
      href: http://joneisen.me/tech/2015/10/29/fyra-functional-relational.html
      text: Blog Introducing fyra, motivations, and future work

  - title: SPSA
    technologies: Haskell, Go, Math
    content: Implementation of <a href="http://www.jhuapl.edu/spsa/">Simultaneous Perturbation Stochastic Approximation</a>, a global optimization function theoretically proven to converge for a wide class of functions, without knowing the derivative.
    links:
    - class: code
      href: https://github.com/yanatan16/haskell-spsa
      text: Haskell Code
    - class: code
      href: https://github.com/yanatan16/go-spsa
      text: Go Code
    - class: blog
      href: http://joneisen.me/development/code/2014/01/22/rewriting-haskell-spsa-to-be-monadic.html
      text: Rewriting haskell-spsa to be monadic

  - title: itertools in Go
    technologies: Go
    content: An implementation of Python's <code>itertools</code> library in Go. A fun experiment that shows how channels can be used like lazy sequences (seq in clojure, iterators in python), but exacerbates Go's lack of generics.
    links:
    - class: code
      href: https://github.com/yanatan16/itertools
    - class: blog
      href: http://joneisen.me/development/code/2013/05/14/golang-itertools.html

  - title: Javascript Concurrency Patterns
    technologies: Javascript, Teaching
    content: A guest lecture given to <a href="http://www.refactoru.com">RefactorU</a> students (one of those bootcamp-style code schools).
    links:
    - class: slides
      href: http://talks.joneisen.me/presentation-javascript-concurrency-patterns/refactoru-9-23-2014.slide#1
    - class: blog
      href: http://joneisen.me/development/talks/2014/09/22/javascript-concurrency-patterns.html

- title: Infrastructure
  items:
  - title: "denvr (Dev Environment CLI)"
    technologies: Clojure, docker, rkt, git, kubernetes
    content: "A CLI to manage development environments easily, consistently, and sharably. <i>Work In Progress</i>"
    links:
    - class: blog
      href: https://github.com/yanatan16/denvr/blob/master/PROPOSAL.md
      text: Proposal
    - class: code
      href: https://github.com/yanatan16/denvr

  - title: Custom Application Infrastructure
    technologies: DevOps, SaltStack
    content: "After building the application infrastructure for <a href='http://rafflecopter.com'>Rafflecopter</a>, I wrote and spoke about it.
              Here is a talk given at a local meetup and a series of blog posts about building a custom microservice application infrastructure.
              This infrastructure was since replaced by <a href='http://kubernetes.io'>kubernetes</a>, but I haven't blogged about that yet."
    links:
    - class: slides
      href: http://talks.joneisen.me/talk-custom-infrastructure/devops-boulder.slide#1
    - class: blog
      href: http://make.rafflecopter.com/custom-infrastructure-1.html
      text: Weighing tradeoffs in building an infrastructure
    - class: blog
      href: http://make.rafflecopter.com/custom-infrastructure-2-load-balancing.html
      text: Load Balancing
    - class: blog
      href: http://make.rafflecopter.com/custom-infrastructure-3-app-migration.html
      text: Migrating Apps
    - class: blog
      href: http://make.rafflecopter.com/clean-salt-states.html
      text: Rewriting SaltStack code to be more reusable

  - title: Containerization of Rafflecopter
    technologies: Docker, Kubernetes
    content: First, a post on dockerizing our development environments, then a full transition to containerized cluster management using kubernetes.
    links:
    - class: blog
      href: http://make.rafflecopter.com/dockerizing-development-environments.html
      text: Dockerizing Development Environments
    - class: future
      text: "Future Blog: Migrating to Kubernetes"

  - title: DevOps Musings
    links:
    - class: blog
      href: http://joneisen.me/devops/2015/05/04/dev-ops-devops.html
      text: Thoughts on DevOps as a culture and a field
    - class: blog
      href: http://joneisen.me/development/architecture/philosophy/2014/09/21/my-perfectly-scalable-system.html
      text: Ideally scalable application infrastructure
